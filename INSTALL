Koha - Requirements and quick-start installation guide

INSTALL document included with [Koha]

For information on how to install Koha without requiring multiple virtual servers - See KohaAllInOne. 
For additional information on how your Configuration files should look see the Hints file.

Important....
To successfully use Koha you need some additional software:

A webserver (It was built to work with Apache, but there is no reason it shouldnt work with any other webserver). 
Mysql (You could intead use postgres, or another sql based database) 
Perl (mod_perl isnt needed, tho koha should work with mod_perl but this hasnt been tested yet). 

Perl Modules:

Date::Manip 
DBI 
DBD::mysql (or whatever database system you use) 
AuthenDBI (if you want to use Database based authentication) 
CDK (for the telnet interface not nessecary if you plan to use the web based circulation module) also requires installation of the C CDK libraries http://www.vexus.ca/CDK.html ( CDKModuleHasProblems ) 
File::Spec (Required for HTML::Template)
HTML::Template

--------------------------------------------------------------------------------


Quick-start Installation Guide
(Assumes the Use of MySQL and Apache)

1. Create a new mysql database called for example Koha
From command line: mysqladmin -uroot -ppassword create Koha 
There is a databse installation shell script included with the Koha tarball.

2. Set up a koha user and password in mysql
Log in to mysql: mysql -uroot -ppassword 

To create a user called "koha" who has full administrative rights to the "Koha" database when autheicting from "localhost", enter the following on mysql command line:

grant all privileges on Koha.* to koha@localhost identified by 'kohapassword'; 

Press ENTER, and if you see no errors then enter \q to quit mysql.


3. Use the mysql script to create the tables
mysql -uusername -ppassword Koha < koha.mysql 

3.1 Update your database tables
perl updatedatabase -I /pathtoC4 

4. Edit koha.conf
	This file resides on the web server and tells the Koha scripts
   how to access the database, and where scripts and documents are
   installed. It is of the form:
	# This is a comment
	variable = value
	foo = bar   # This is also a comment

	The following variables are currently supported:
   database
	Name of the Koha database that you created in step 1 above.
   user
   pass
	Name and password of the Koha database user that you creted in
	step 2
   includes
	Directory where you plan to install the include files (*.inc)
	in step 6.

	The "database", "user", and "pass" settings are required.

5. Install koha.conf
	By default, Koha looks for its configuration file in
   /etc/koha.conf, though you may override this by setting the
   $KOHA_CONF environment variable to the path to a different file.
	If you are using Apache 1.1 or later, with virtual hosts, you
   can use the SetEnv directive to use a different configuration file
   for each virtual host.

	Security note: /etc/koha.conf must be readable by the UID
   under which the web server is running, and any other users running
   Koha-related scripts or programs. It need not be writable.

6. Create directories for scripts and html documents.
Here you need to decide where your scripts and html are going to live.
And edit C4/Output.pm to reflect that.
Set $path= where your includes live,
for example: $path="/usr/local/www/koha/htdocs/includes";

You do not need to do that if you have already entered the includes path in koha.conf (see example above) 

Next copy the C4 directory (in scripts/) to somewhere in your perl path
eg /usr/local/lib/site_perl/i386-linux/

If you do not have sufficient access to copy the files to the default perl folder (maybe you are using your ISPs hosting server) then you can copy the modules to any other location and add a line to apache.conf like:

SetEnv PERL5LIB "/usr/local/www/koha/modules"

Copy the C4 directory into the modules folder (see detailed example in KohaHints)


7. Set up your Online Public Access Catalogue (OPAC)

Set up a webspace for the OPAC: For example: You might make /usr/local/www/opac ... and set a virtual host in apache to use that dir 
In your opac dir make a dir called htdocs, and copy everything in opac-html/ to it. 
Again in your opac dir make a dir called cgi-bin and copy all the files in scripts/ that have a .pl extension to it, eg copy scripts/*.pl /usr/local/www/opac/cgi-bin/koha/ 
Your virtual host should be set up to use these dirs, some thing like this: 


   <VirtualHost opac.your.site>                         
   ServerAdmin webmaster@your.site                            
   DocumentRoot /usr/local/www/opac/htdocs                     
   ServerName opac.your.site                      
   ErrorLog logs/opac-error_log       
   TransferLog logs/opac-access_log               

   SetEnv KOHA_CONF /usr/local/etc/koha.conf
   </VirtualHost>


When finished, restart apache and point your browser at opac.your.site and it should be all go (of course - if you dont have any data in the database there wont be much to see!) 

Find supplementary information and config examples in KohaHints

8. Set up the intranet/librarian interface

Create new directories and additional httpd.conf changes to Set up another webspace. Lets call it koha. 
For example:

In the dir you have just created make an htdocs dir and a cgi-bin dir 
Copy everything in intranet-html/ to the htdocs dir 
Copy all the .pl files in scripts/ to the cgi-bin/koha dir 
Make sure your virtual host is set up to use these dirs 
Restart apache point your browser at koha.your.site and it should work 


9. Configure SECURITY for the Librarians/Intranet Interface
If you are using AuthenDBI to do your authentication, you will need to add some users to the users table in the koha database. And edit your apache conf file to use AuthenDBI on the intranet site.

Otherwise, set up htaccess files in both koha/htdocs/ and koha/cgi-bin You can use general .htaccess based security. It is important though to password protect the librarians interface because from it you can delete and add items, remove borrowers fines and generally case havoc.


10. Set up Issues, Returns and Telnet interface.
Since we have already copied the files in scripts/C4 into somewhere in our perl source tree

We just need to now copy the scripts from scripts/telnet/ into somewhere in the executable path, eg /usr/local/bin

Then its done: type circ and your away, ready to issue and return.

In release 1.1.0 on there is now a webbased circulation module, So issues and returns can be done from there, or from circ.


You will find some Koha config examples in KohaHints 


Check out KohaMiniFAQ for general, supplementary information. 
